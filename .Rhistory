modelFit <- train(training$diagnosis~., method = "lm")
modelFit <- train(diagnosis~., data = training, method = "lm")
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
training <- training[,c(58:69)]
modelFit <- train(diagnosis~., data = training, method = "lm")
modelFit <- train(training$diagnosis, method = "lm", data = training)
set.seed(3433)
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
training <- training[,c(58:69)]
modelFit <- train(training$diagnosis, method = "lm", data = training)
modelFit <- train(training$diagnosis ~ ., method = "lm", data = training)
View(training)
modelFit <- train(diagnosis ~ ., method = "lm", data = training)
training <- training[,c(1, 58:69)]
View(training)
training <- training[,c(2, 58:69)]
View(training)
training = adData[ inTrain,]
testing = adData[-inTrain,]
training <- training[,c(2, 58:69)]
View(training)
View(adData)
ibrary(AppliedPredictiveModeling)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
View(training)
colnames(training)
training <- training[,c(1, 58:69)]
View(training)
modelFit <- train(diagnosis ~ ., method = "lm", data = training)
modelFit <- train(training$diagnosis ~ ., method = "lm", data = training)
modelFit <- train(training$diagnosis ~ ., method = "glm", data = training)
summary(modelFit)
modelFit <- train(training$diagnosis ~ ., method = "lm", data = training)
modelFit <- train(diagnosis ~ ., method = "lm", data = training)
modelFit <- train(diagnosis ~ .,data = training, method = "lm")
modelFit <- train(diagnosis ~ .,data = training, method = "glm")
summary(modelFit)
training <- training[,c(58:69)]
set.seed(3433)
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
training <- training[,c(58:69)]
source('~/.active-rstudio-document', echo=TRUE)
modelFit <- train(training, diagnosis, method = "glm")
summary(modelFit)
modelFitPC <- train(trainingPC, diagnosis, method="glm")
preProc <- preProcess(training, method = "pca",
thresh = 0.80)
trainingPC <- predict(preProc, training)
modelFitPC <- train(trainingPC, diagnosis, method="glm")
modelFitPC <- train(trainingPC, diagnosis, method="glm")
set.seed(3433)
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
training <- training[,c(58:69)]
modelFit <- train(training, diagnosis, method = "glm")
summary(modelFit)
preProc <- preProcess(training, method = "pca",
thresh = 0.80)
trainingPC <- predict(preProc, training)
modelFitPC <- train(trainingPC, diagnosis, method="glm")
modelFit
modelFitPC
modelFitPC <- train(trainingPC, diagnosis, method="glm")
modelFitPC
View(training)
training <- training[,c(58:69)]
modelFit <- train(training, diagnosis, method = "glm")
modelFit
set.seed(3433)
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
training <- training[,c(58:69)]
modelFit <- train(training, diagnosis, method = "glm")
modelFit
preProc <- preProcess(training, method = "pca",
thresh = 0.80)
trainingPC <- predict(preProc, training)
modelFitPC <- train(trainingPC, diagnosis, method="glm")
modelFitPC
set.seed(3433)
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
smallTraining <- training[,c(58:69)]
modelFit <- train(smallTraining, training$diagnosis, method = "glm")
modelFit
preProc <- preProcess(smallTraining, method = "pca",
thresh = 0.80)
trainingPC <- predict(preProc, smallTraining)
modelFitPC <- train(trainingPC, diagnosis, method="glm")
modelFitPC
trainingPC <- predict(preProc, smallTraining)
modelFitPC <- train(trainingPC, training$diagnosis, method="glm")
modelFitPC
set.seed(3433)
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
smallTraining <- training[,c(58:69)]
modelFit <- train(smallTraining, training$diagnosis, method = "glm")
modelFit
preProc <- preProcess(smallTraining, method = "pca",
thresh = 0.80)
trainingPC <- predict(preProc, smallTraining)
modelFitPC <- train(trainingPC, training$diagnosis, method="glm")
modelFitPC
colnames(training)
View(training)
View(smallTraining)
library(stringr)
setwd("/Users/Quan/GitHub/nycc-legistar/")
nycMeetings <- read.csv("nyccMeetings.csv",
colClasses = c(rep("character", 5)),
stringsAsFactors = FALSE)
rmSpaces <- function(df) {gsub("^\\s+|\\s+$", "", df)}
nycMeetings <- data.frame(sapply(nycMeetings, rmSpaces))
nycMeetings[nycMeetings == ""] <- NA
head(nycMeetings)
library(dplyr)
library(ggplot2)
nycMeetings_df <- tbl_df(nycMeetings)
nycMeetings_df$Date <- as.POSIXct(nycMeetings$Date, format = "%m/%d/%Y")
# Remove defunct committees & Committee on Finance (outliers)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance")))
month.id <- 1:12
# All Committees
ggplot(nycMeetings, aes(x = Month)) + geom_bar(stat = "bin", aes(color = factor(Deferred)))
# Facet Committees
ggplot(nycMeetings, aes(x = Month)) + geom_bar(stat = "bin", aes(color = factor(Deferred))) + facet_wrap(~Name)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance"))) %>%
group_by(Name) %>%
summarise(Mean.Month = mean(Month))
View(nycMeetings)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance"))) %>%
group_by(Name, Month) %>%
summarise(Mean.Month = mean(Month))
View(nycMeetings)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance"))) %>%
group_by(Name, Month) %>%
summarise(Mean.Month = length(Month))
View(nycMeetings)
View(nycMeetings)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance"))) %>%
#         group_by(Name, Month) %>%
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance"))) %>%
#         group_by(Name, Month) %>%
#         summarise(Mean.Month = length(Month))
#
# All Committees
ggplot(nycMeetings, aes(x = Month)) + geom_bar(stat = "bin", aes(color = factor(Deferred)))
# Facet Committees
ggplot(nycMeetings, aes(x = Month)) + geom_bar(stat = "bin", aes(color = factor(Deferred))) + facet_wrap(~Name)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance")))
#         group_by(Name, Month) %>%
#         summarise(Mean.Month = length(Month))
#
# All Committees
ggplot(nycMeetings, aes(x = Month)) + geom_bar(stat = "bin", aes(color = factor(Deferred)))
# Facet Committees
ggplot(nycMeetings, aes(x = Month)) + geom_bar(stat = "bin", aes(color = factor(Deferred))) + facet_wrap(~Name)
View(nycMeetings_df)
tail(nycMeetings_df)
source('~/.active-rstudio-document', echo=TRUE)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town")))
#         group_by(Name, Month) %>%
#         summarise(Mean.Month = length(Month))
#
# Last two years -
# All Committees
ggplot(nycMeetings, aes(x = Month)) + geom_bar(stat = "bin", aes(color = factor(Deferred)))
# Facet Committees
ggplot(nycMeetings, aes(x = Month)) + geom_bar(stat = "bin", aes(color = factor(Deferred))) + facet_wrap(~Name)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Year = factor(format(Date, format = "%m")),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance")))
#         group_by(Name, Month) %>%
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Year = factor(format(Date, format = "%m")),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance")))
View(nycMeetings)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Year = factor(format(Date, format = "%Y")),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance")))
View(nycMeetings)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Year = factor(format(Date, format = "%Y")),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance"))) %>%
group_by(Name, Year) %>%
summarise(Mean.Month = mean(Month))
View(nycMeetings)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Year = factor(format(Date, format = "%Y")),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance"))) %>%
group_by(Name, Month, Year) %>%
summarise(Mean.Month = mean(Month))
View(nycMeetings)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Year = factor(format(Date, format = "%Y")),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance"))) %>%
group_by(Name, Month, Year) %>%
summarise(Mean.Month = mean(length(Month)))
View(nycMeetings)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Year = factor(format(Date, format = "%Y")),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance")))
View(nycMeetings_df)
ggplot(nycMeetings, aes(x = Month)) + geom_bar(stat = "bin", aes(color = factor(Deferred)))
# Facet Committees
ggplot(nycMeetings, aes(x = Month)) + geom_bar(stat = "bin", aes(color = factor(Deferred))) + facet_wrap(~Name)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Year = factor(format(Date, format = "%Y")),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance")))
group_by(Name, Year) %>%
summarise(Mean.Month = mean(length(Month)))
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Year = factor(format(Date, format = "%Y")),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance"))) %>%
group_by(Name, Year) %>%
summarise(Mean.Month = mean(length(Month)))
View(nycMeetings)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Year = factor(format(Date, format = "%Y")),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance"))) %>%
group_by(Name, Year) %>%
select(Name, Year, Month) %>%
summarise(Mean.Month = mean(length(Month)))
View(nycMeetings)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Year = factor(format(Date, format = "%Y")),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance"))) %>%
group_by(Name, Year) %>%
select(Name, Month) %>%
summarise(Mean.Month = mean(length(Name)))
View(nycMeetings)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Year = factor(format(Date, format = "%Y")),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance"))) %>%
group_by(Name, Month) %>%
summarise(Mean.Month = mean(length(Name)))
View(nycMeetings)
View(nycMeetings)
ggplot(nycMeetings, aes(x = Mean.Month)) + geom_bar(stat = "bin", aes(color = factor(Deferred)))
# Facet Committees
ggplot(nycMeetings, aes(x = Mean.Month)) + geom_bar(stat = "bin", aes(color = factor(Deferred))) + facet_wrap(~Name)
View(nycMeetings)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Year = factor(format(Date, format = "%Y")),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance"))) %>%
group_by(Name, Month) %>%
select(Name, Month, Deferred) %>%
summarise(Mean.Month = mean(length(Name)))
View(nycMeetings)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Year = factor(format(Date, format = "%Y")),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance"))) %>%
group_by(Name, Month) %>%
summarise(Mean.Month = mean(length(Name)))
# Last two years -
# How do complaints correlate with meetings
# All Committees
ggplot(nycMeetings, aes(x = Mean.Month)) + geom_bar(stat = "bin")
# Facet Committees
ggplot(nycMeetings, aes(x = Mean.Month)) + geom_bar(stat = "bin") + facet_wrap(~Name)
ggplot(nycMeetings, aes(x = Month, y = Mean.Month)) + geom_histogram()
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Year = factor(format(Date, format = "%Y")),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance"))) %>%
group_by(Name, Month) %>%
summarise(Mean.Month = mean(length(Name)))
# Last two years -
# How do complaints correlate with meetings
# All Committees
ggplot(nycMeetings, aes(x = Month, y = Mean.Month)) + geom_histogram()
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Year = factor(format(Date, format = "%Y")),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
filter(!str_detect(Name, ignore.case("Committee on Finance"))) %>%
group_by(Name, Month) %>%
summarise(Mean.Month = mean(length(Name)))
# Last two years -
# How do complaints correlate with meetings
# All Committees
ggplot(nycMeetings, aes(x = Month, y = Mean.Month)) + geom_hist()
ggplot(nycMeetings, aes(x = Month, y = Mean.Month)) + geom_histogram(stat = "identity")
ggplot(nycMeetings, aes(x = Mean.Month)) + geom_histogram(stat = "identity") + facet_wrap(~Name)
ggplot(nycMeetings, aes(x = Month, y = Mean.Month)) + geom_histogram(stat = "identity") + facet_wrap(~Name)
nycMeetings <- nycMeetings_df %>%
mutate(DateTime = paste(Date,Time),
Month = factor(format(Date, format = "%b"), levels = month.abb),
Year = factor(format(Date, format = "%Y")),
Deferred = ifelse(Time == "Deferred", "Deferred", "Calendared")) %>%
filter(!str_detect(Name, ignore.case("Inactive"))) %>%
filter(!str_detect(Name, ignore.case("Subcommittee"))) %>%
filter(!str_detect(Name, ignore.case("Task"))) %>%
filter(!str_detect(Name, ignore.case("Town"))) %>%
group_by(Name, Month) %>%
summarise(Mean.Month = mean(length(Name)))
# Last two years -
# How do complaints correlate with meetings
# All Committees
ggplot(nycMeetings, aes(x = Month, y = Mean.Month)) + geom_histogram(stat = "identity")
# Facet Committees
ggplot(nycMeetings, aes(x = Month, y = Mean.Month)) + geom_histogram(stat = "identity") + facet_wrap(~Name)
View(nycMeetings)
View(nycMeetings_df)
